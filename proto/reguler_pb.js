// source: proto/reguler.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.proto.RegulerCreateRequest', null, global);
goog.exportSymbol('proto.proto.RegulerGetRequest', null, global);
goog.exportSymbol('proto.proto.RegulerGetResponse', null, global);
goog.exportSymbol('proto.proto.RegulerResponse', null, global);
goog.exportSymbol('proto.proto.RegulerUpdateRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RegulerCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.RegulerCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.RegulerCreateRequest.displayName = 'proto.proto.RegulerCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RegulerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.RegulerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.RegulerResponse.displayName = 'proto.proto.RegulerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RegulerGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.RegulerGetResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.RegulerGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.RegulerGetResponse.displayName = 'proto.proto.RegulerGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RegulerGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.RegulerGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.RegulerGetRequest.displayName = 'proto.proto.RegulerGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.RegulerUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.RegulerUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.RegulerUpdateRequest.displayName = 'proto.proto.RegulerUpdateRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RegulerCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RegulerCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RegulerCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bulan: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tahun: jspb.Message.getFieldWithDefault(msg, 4, ""),
    infaq: jspb.Message.getFieldWithDefault(msg, 6, 0),
    zakat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    shadaqah: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ikhsan: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sabil: jspb.Message.getFieldWithDefault(msg, 10, 0),
    tabunganfitrah: jspb.Message.getFieldWithDefault(msg, 11, 0),
    tabunganqurban: jspb.Message.getFieldWithDefault(msg, 12, 0),
    bina: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RegulerCreateRequest}
 */
proto.proto.RegulerCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RegulerCreateRequest;
  return proto.proto.RegulerCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RegulerCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RegulerCreateRequest}
 */
proto.proto.RegulerCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBulan(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTahun(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInfaq(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setZakat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShadaqah(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIkhsan(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSabil(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTabunganfitrah(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTabunganqurban(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBina(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RegulerCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RegulerCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RegulerCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBulan();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTahun();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInfaq();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getZakat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getShadaqah();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIkhsan();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getSabil();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTabunganfitrah();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getTabunganqurban();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getBina();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string CustomerID = 1;
 * @return {string}
 */
proto.proto.RegulerCreateRequest.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Bulan = 3;
 * @return {string}
 */
proto.proto.RegulerCreateRequest.prototype.getBulan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setBulan = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Tahun = 4;
 * @return {string}
 */
proto.proto.RegulerCreateRequest.prototype.getTahun = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setTahun = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 Infaq = 6;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getInfaq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setInfaq = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 Zakat = 7;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getZakat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setZakat = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 Shadaqah = 8;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getShadaqah = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setShadaqah = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 Ikhsan = 9;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getIkhsan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setIkhsan = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 Sabil = 10;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getSabil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setSabil = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 TabunganFitrah = 11;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getTabunganfitrah = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setTabunganfitrah = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 TabunganQurban = 12;
 * @return {number}
 */
proto.proto.RegulerCreateRequest.prototype.getTabunganqurban = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setTabunganqurban = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string Bina = 13;
 * @return {string}
 */
proto.proto.RegulerCreateRequest.prototype.getBina = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerCreateRequest} returns this
 */
proto.proto.RegulerCreateRequest.prototype.setBina = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RegulerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RegulerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RegulerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RegulerResponse}
 */
proto.proto.RegulerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RegulerResponse;
  return proto.proto.RegulerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RegulerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RegulerResponse}
 */
proto.proto.RegulerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RegulerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RegulerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RegulerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.proto.RegulerResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerResponse} returns this
 */
proto.proto.RegulerResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.RegulerGetResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RegulerGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RegulerGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RegulerGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.RegulerCreateRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RegulerGetResponse}
 */
proto.proto.RegulerGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RegulerGetResponse;
  return proto.proto.RegulerGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RegulerGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RegulerGetResponse}
 */
proto.proto.RegulerGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalPage(value);
      break;
    case 3:
      var value = new proto.proto.RegulerCreateRequest;
      reader.readMessage(value,proto.proto.RegulerCreateRequest.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RegulerGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RegulerGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RegulerGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.RegulerCreateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.proto.RegulerGetResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerGetResponse} returns this
 */
proto.proto.RegulerGetResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 total_page = 2;
 * @return {number}
 */
proto.proto.RegulerGetResponse.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerGetResponse} returns this
 */
proto.proto.RegulerGetResponse.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated RegulerCreateRequest data = 3;
 * @return {!Array<!proto.proto.RegulerCreateRequest>}
 */
proto.proto.RegulerGetResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.RegulerCreateRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.RegulerCreateRequest, 3));
};


/**
 * @param {!Array<!proto.proto.RegulerCreateRequest>} value
 * @return {!proto.proto.RegulerGetResponse} returns this
*/
proto.proto.RegulerGetResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.RegulerCreateRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.RegulerCreateRequest}
 */
proto.proto.RegulerGetResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.RegulerCreateRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.RegulerGetResponse} returns this
 */
proto.proto.RegulerGetResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RegulerGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RegulerGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RegulerGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    search: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RegulerGetRequest}
 */
proto.proto.RegulerGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RegulerGetRequest;
  return proto.proto.RegulerGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RegulerGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RegulerGetRequest}
 */
proto.proto.RegulerGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPerPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RegulerGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RegulerGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RegulerGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPerPage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 page = 1;
 * @return {number}
 */
proto.proto.RegulerGetRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerGetRequest} returns this
 */
proto.proto.RegulerGetRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 per_page = 2;
 * @return {number}
 */
proto.proto.RegulerGetRequest.prototype.getPerPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.RegulerGetRequest} returns this
 */
proto.proto.RegulerGetRequest.prototype.setPerPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search = 3;
 * @return {string}
 */
proto.proto.RegulerGetRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerGetRequest} returns this
 */
proto.proto.RegulerGetRequest.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.RegulerUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.RegulerUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.RegulerUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bulantahun: jspb.Message.getFieldWithDefault(msg, 2, ""),
    infaq: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zakat: jspb.Message.getFieldWithDefault(msg, 4, ""),
    shadaqah: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ikhsan: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sabil: jspb.Message.getFieldWithDefault(msg, 7, ""),
    tabunganfitrah: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tabunganqurban: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bina: jspb.Message.getFieldWithDefault(msg, 10, ""),
    id: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.RegulerUpdateRequest}
 */
proto.proto.RegulerUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.RegulerUpdateRequest;
  return proto.proto.RegulerUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.RegulerUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.RegulerUpdateRequest}
 */
proto.proto.RegulerUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBulantahun(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfaq(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZakat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShadaqah(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIkhsan(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSabil(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabunganfitrah(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabunganqurban(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBina(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.RegulerUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.RegulerUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.RegulerUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.RegulerUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBulantahun();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfaq();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZakat();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getShadaqah();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIkhsan();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSabil();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTabunganfitrah();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTabunganqurban();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBina();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string CustomerID = 1;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BulanTahun = 2;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getBulantahun = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setBulantahun = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Infaq = 3;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getInfaq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setInfaq = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Zakat = 4;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getZakat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setZakat = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Shadaqah = 5;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getShadaqah = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setShadaqah = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Ikhsan = 6;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getIkhsan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setIkhsan = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Sabil = 7;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getSabil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setSabil = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string TabunganFitrah = 8;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getTabunganfitrah = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setTabunganfitrah = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string TabunganQurban = 9;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getTabunganqurban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setTabunganqurban = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string Bina = 10;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getBina = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setBina = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string ID = 11;
 * @return {string}
 */
proto.proto.RegulerUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.RegulerUpdateRequest} returns this
 */
proto.proto.RegulerUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


goog.object.extend(exports, proto.proto);
