// source: proto/customers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.proto.Customer', null, global);
goog.exportSymbol('proto.proto.CustomerCreateRequest', null, global);
goog.exportSymbol('proto.proto.CustomerGetRequest', null, global);
goog.exportSymbol('proto.proto.CustomerGetResponse', null, global);
goog.exportSymbol('proto.proto.CustomerResponse', null, global);
goog.exportSymbol('proto.proto.CustomerUpdateRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CustomerCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.CustomerCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.CustomerCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CustomerCreateRequest.displayName = 'proto.proto.CustomerCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Customer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Customer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Customer.displayName = 'proto.proto.Customer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CustomerResponse.displayName = 'proto.proto.CustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CustomerGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.CustomerGetResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.CustomerGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CustomerGetResponse.displayName = 'proto.proto.CustomerGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CustomerGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CustomerGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CustomerGetRequest.displayName = 'proto.proto.CustomerGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CustomerUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CustomerUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CustomerUpdateRequest.displayName = 'proto.proto.CustomerUpdateRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.CustomerCreateRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CustomerCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CustomerCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CustomerCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CustomerCreateRequest}
 */
proto.proto.CustomerCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CustomerCreateRequest;
  return proto.proto.CustomerCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CustomerCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CustomerCreateRequest}
 */
proto.proto.CustomerCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.proto.Customer;
      reader.readMessage(value,proto.proto.Customer.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CustomerCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CustomerCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CustomerCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer data = 3;
 * @return {!Array<!proto.proto.Customer>}
 */
proto.proto.CustomerCreateRequest.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Customer, 3));
};


/**
 * @param {!Array<!proto.proto.Customer>} value
 * @return {!proto.proto.CustomerCreateRequest} returns this
*/
proto.proto.CustomerCreateRequest.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Customer}
 */
proto.proto.CustomerCreateRequest.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CustomerCreateRequest} returns this
 */
proto.proto.CustomerCreateRequest.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Customer.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Customer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Customer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Customer.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nik: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nama: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statuskk: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nokk: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tanggallahir: jspb.Message.getFieldWithDefault(msg, 6, ""),
    usia: jspb.Message.getFieldWithDefault(msg, 7, ""),
    kotakab: jspb.Message.getFieldWithDefault(msg, 8, ""),
    kecamatan: jspb.Message.getFieldWithDefault(msg, 9, ""),
    desakelurahan: jspb.Message.getFieldWithDefault(msg, 10, ""),
    kampung: jspb.Message.getFieldWithDefault(msg, 11, ""),
    rt: jspb.Message.getFieldWithDefault(msg, 12, ""),
    rw: jspb.Message.getFieldWithDefault(msg, 13, ""),
    kol: jspb.Message.getFieldWithDefault(msg, 14, ""),
    syahidan: jspb.Message.getFieldWithDefault(msg, 15, ""),
    pj: jspb.Message.getFieldWithDefault(msg, 16, ""),
    note: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Customer}
 */
proto.proto.Customer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Customer;
  return proto.proto.Customer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Customer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Customer}
 */
proto.proto.Customer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNik(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNama(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatuskk(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNokk(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTanggallahir(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsia(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setKotakab(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setKecamatan(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesakelurahan(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setKampung(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRw(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKol(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSyahidan(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPj(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Customer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Customer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Customer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Customer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNik();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNama();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatuskk();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNokk();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTanggallahir();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUsia();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getKotakab();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getKecamatan();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDesakelurahan();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getKampung();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRw();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getKol();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSyahidan();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getPj();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string No = 1;
 * @return {string}
 */
proto.proto.Customer.prototype.getNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setNo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string NIK = 2;
 * @return {string}
 */
proto.proto.Customer.prototype.getNik = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setNik = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Nama = 3;
 * @return {string}
 */
proto.proto.Customer.prototype.getNama = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setNama = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string StatusKK = 4;
 * @return {string}
 */
proto.proto.Customer.prototype.getStatuskk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setStatuskk = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string NoKK = 5;
 * @return {string}
 */
proto.proto.Customer.prototype.getNokk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setNokk = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string TanggalLahir = 6;
 * @return {string}
 */
proto.proto.Customer.prototype.getTanggallahir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setTanggallahir = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Usia = 7;
 * @return {string}
 */
proto.proto.Customer.prototype.getUsia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setUsia = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string KotaKab = 8;
 * @return {string}
 */
proto.proto.Customer.prototype.getKotakab = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setKotakab = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Kecamatan = 9;
 * @return {string}
 */
proto.proto.Customer.prototype.getKecamatan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setKecamatan = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string DesaKelurahan = 10;
 * @return {string}
 */
proto.proto.Customer.prototype.getDesakelurahan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setDesakelurahan = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string Kampung = 11;
 * @return {string}
 */
proto.proto.Customer.prototype.getKampung = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setKampung = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string RT = 12;
 * @return {string}
 */
proto.proto.Customer.prototype.getRt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setRt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string RW = 13;
 * @return {string}
 */
proto.proto.Customer.prototype.getRw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setRw = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string Kol = 14;
 * @return {string}
 */
proto.proto.Customer.prototype.getKol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setKol = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string Syahidan = 15;
 * @return {string}
 */
proto.proto.Customer.prototype.getSyahidan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setSyahidan = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string PJ = 16;
 * @return {string}
 */
proto.proto.Customer.prototype.getPj = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setPj = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string Note = 17;
 * @return {string}
 */
proto.proto.Customer.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Customer} returns this
 */
proto.proto.Customer.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CustomerResponse}
 */
proto.proto.CustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CustomerResponse;
  return proto.proto.CustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CustomerResponse}
 */
proto.proto.CustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.proto.CustomerResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerResponse} returns this
 */
proto.proto.CustomerResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.CustomerGetResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CustomerGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CustomerGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CustomerGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CustomerGetResponse}
 */
proto.proto.CustomerGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CustomerGetResponse;
  return proto.proto.CustomerGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CustomerGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CustomerGetResponse}
 */
proto.proto.CustomerGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalPage(value);
      break;
    case 3:
      var value = new proto.proto.Customer;
      reader.readMessage(value,proto.proto.Customer.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CustomerGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CustomerGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CustomerGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalPage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.proto.CustomerGetResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerGetResponse} returns this
 */
proto.proto.CustomerGetResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 total_page = 2;
 * @return {number}
 */
proto.proto.CustomerGetResponse.prototype.getTotalPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CustomerGetResponse} returns this
 */
proto.proto.CustomerGetResponse.prototype.setTotalPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Customer data = 3;
 * @return {!Array<!proto.proto.Customer>}
 */
proto.proto.CustomerGetResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Customer, 3));
};


/**
 * @param {!Array<!proto.proto.Customer>} value
 * @return {!proto.proto.CustomerGetResponse} returns this
*/
proto.proto.CustomerGetResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Customer}
 */
proto.proto.CustomerGetResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.CustomerGetResponse} returns this
 */
proto.proto.CustomerGetResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CustomerGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CustomerGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CustomerGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    search: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CustomerGetRequest}
 */
proto.proto.CustomerGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CustomerGetRequest;
  return proto.proto.CustomerGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CustomerGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CustomerGetRequest}
 */
proto.proto.CustomerGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPerPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CustomerGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CustomerGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CustomerGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPerPage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 page = 1;
 * @return {number}
 */
proto.proto.CustomerGetRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CustomerGetRequest} returns this
 */
proto.proto.CustomerGetRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 per_page = 2;
 * @return {number}
 */
proto.proto.CustomerGetRequest.prototype.getPerPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.CustomerGetRequest} returns this
 */
proto.proto.CustomerGetRequest.prototype.setPerPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search = 3;
 * @return {string}
 */
proto.proto.CustomerGetRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerGetRequest} returns this
 */
proto.proto.CustomerGetRequest.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CustomerUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CustomerUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CustomerUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    no: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nik: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nama: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statuskk: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nokk: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tanggallahir: jspb.Message.getFieldWithDefault(msg, 6, ""),
    usia: jspb.Message.getFieldWithDefault(msg, 7, ""),
    kotakab: jspb.Message.getFieldWithDefault(msg, 8, ""),
    kecamatan: jspb.Message.getFieldWithDefault(msg, 9, ""),
    desakelurahan: jspb.Message.getFieldWithDefault(msg, 10, ""),
    kampung: jspb.Message.getFieldWithDefault(msg, 11, ""),
    rt: jspb.Message.getFieldWithDefault(msg, 12, ""),
    rw: jspb.Message.getFieldWithDefault(msg, 13, ""),
    kol: jspb.Message.getFieldWithDefault(msg, 14, ""),
    syahidan: jspb.Message.getFieldWithDefault(msg, 15, ""),
    pj: jspb.Message.getFieldWithDefault(msg, 16, ""),
    note: jspb.Message.getFieldWithDefault(msg, 17, ""),
    id: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CustomerUpdateRequest}
 */
proto.proto.CustomerUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CustomerUpdateRequest;
  return proto.proto.CustomerUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CustomerUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CustomerUpdateRequest}
 */
proto.proto.CustomerUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNik(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNama(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatuskk(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNokk(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTanggallahir(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsia(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setKotakab(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setKecamatan(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesakelurahan(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setKampung(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRw(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKol(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSyahidan(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPj(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CustomerUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CustomerUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CustomerUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CustomerUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNik();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNama();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatuskk();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNokk();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTanggallahir();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUsia();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getKotakab();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getKecamatan();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDesakelurahan();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getKampung();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRw();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getKol();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSyahidan();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getPj();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string No = 1;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setNo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string NIK = 2;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getNik = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setNik = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Nama = 3;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getNama = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setNama = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string StatusKK = 4;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getStatuskk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setStatuskk = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string NoKK = 5;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getNokk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setNokk = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string TanggalLahir = 6;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getTanggallahir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setTanggallahir = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Usia = 7;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getUsia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setUsia = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string KotaKab = 8;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getKotakab = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setKotakab = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Kecamatan = 9;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getKecamatan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setKecamatan = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string DesaKelurahan = 10;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getDesakelurahan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setDesakelurahan = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string Kampung = 11;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getKampung = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setKampung = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string RT = 12;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getRt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setRt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string RW = 13;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getRw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setRw = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string Kol = 14;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getKol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setKol = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string Syahidan = 15;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getSyahidan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setSyahidan = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string PJ = 16;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getPj = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setPj = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string Note = 17;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string ID = 18;
 * @return {string}
 */
proto.proto.CustomerUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CustomerUpdateRequest} returns this
 */
proto.proto.CustomerUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


goog.object.extend(exports, proto.proto);
